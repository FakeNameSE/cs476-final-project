***load p-output/init-query
load m-output/init-protocol

mod TEST is
  inc INTERFACE .
  inc INIT-PROTOCOL .

  *** PVeStA interface
  eq initState = init(initconf) .  

  
  vars T T' : Float .  var C : Config .  
  vars TES TES1 TES2 TES3 : TimedEvents .  var ID : Id .
  
  *** Quatex
  --- What proportion of data requests trigger new cookie requests first? Proxy for got removed from server (overhead).
  --- Total number of client cookie requests / number of client data requests not including retries

  op totalClientCookieRequests : TimedEvents -> Float .
  eq totalClientCookieRequests(TES1 ; (cookieRequestEvent @ T) ; TES2) = totalClientCookieRequests(TES1 ; TES2) + 1.0 .
  eq totalClientCookieRequests(TES) = 0.0 [owise] .

  op totalClientDataRequests : TimedEvents -> Float .
  eq totalClientDataRequests(TES1 ; (dataRequestEvent @ T) ; TES2) = totalClientDataRequests(TES1 ; TES2) + 1.0 .
  eq totalClientDataRequests(TES) = 0.0 [owise] .

  op cookieRequestRatio : Config -> Float .
  eq cookieRequestRatio({< log : Monitor | events: TES > C | T }) = totalClientCookieRequests(TES) / totalClientDataRequests(TES) .

  eq val(1,C) = cookieRequestRatio(C) .

  --- op prop : Config -> Float .
  --- eq prop({ C | T }) = T / 3.0 .
  
  --- op avgLatency : Config -> Float .
  --- eq avgLatency({< log : Monitor | events: TES > C | T }) = totalLatency(TES) / numberOfQueries(TES) .

  --- op totalLatency : TimedEvents -> Float .
  --- eq totalLatency(TES1 ; (startQuery(ID) @ T) ; TES2 ; (endQuery(ID) @ T') ; TES3) 
  ---  = totalLatency(TES1 ; TES2 ; TES3) + T' - T .
  --- eq totalLatency(TES) = 0.0 [owise] .
  
  --- op numberOfQueries : TimedEvents -> Float .
  --- eq numberOfQueries(TES1 ; (startQuery(ID) @ T) ; TES2 ; (endQuery(ID) @ T') ; TES3)
  ---  = numberOfQueries(TES1 ; TES2 ; TES3) + 1.0 .
  --- eq numberOfQueries(TES) = 0.0 [owise] .
  
  --- eq val(0,C) = prop(C) .
  --- eq val(1,C) = avgLatency(C) .
  
endm

set clear rules off .
